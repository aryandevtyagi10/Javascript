/* style.css */ body { margin: 0; padding: 0; font-family: Arial, sans-serif; background: #f0f0f0; display: flex; justify-content: center; align-items: center; height: 100vh; }

.game-container { text-align: center; background: #fff; padding: 30px; border-radius: 10px; box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); }

h1 { margin-bottom: 20px; }

.board { display: grid; grid-template-columns: repeat(3, 100px); grid-template-rows: repeat(3, 100px); gap: 10px; margin-bottom: 20px; }

.cell { display: flex; justify-content: center; align-items: center; background: #e0e0e0; font-size: 2rem; cursor: pointer; border-radius: 5px; transition: background 0.3s; }

.cell:hover { background: #d0d0d0; }

.status { font-size: 1.2rem; margin-bottom: 10px; color: #333; }

button { padding: 10px 20px; font-size: 1rem; background: #007bff; color: white; border: none; border-radius: 5px; cursor: pointer; transition: background 0.3s; }

button:hover { background: #0056b3; }

/* script.js */ document.addEventListener("DOMContentLoaded", () => { const board = document.getElementById("board"); const status = document.getElementById("status"); const restartBtn = document.getElementById("restartBtn");

let currentPlayer = "X"; let cells = Array(9).fill(null); let gameActive = true;

function renderBoard() { board.innerHTML = ""; cells.forEach((cell, index) => { const cellDiv = document.createElement("div"); cellDiv.classList.add("cell"); cellDiv.dataset.index = index; cellDiv.textContent = cell; board.appendChild(cellDiv); }); }

function checkWinner() { const winConditions = [ [0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6], ];

for (let condition of winConditions) {
  const [a, b, c] = condition;
  if (cells[a] && cells[a] === cells[b] && cells[a] === cells[c]) {
    gameActive = false;
    return cells[a];
  }
}

if (!cells.includes(null)) {
  gameActive = false;
  return "Draw";
}

return null;

}

function handleClick(e) { const index = e.target.dataset.index; if (!gameActive || cells[index]) return;

cells[index] = currentPlayer;
renderBoard();

const winner = checkWinner();
if (winner) {
  status.textContent = winner === "Draw" ? "It's a Draw!" : `${winner} wins!`;
} else {
  currentPlayer = currentPlayer === "X" ? "O" : "X";
  status.textContent = `${currentPlayer}'s Turn`;
}

}

function restartGame() { cells = Array(9).fill(null); currentPlayer = "X"; gameActive = true; status.textContent = "X's Turn"; renderBoard(); }

board.addEventListener("click", handleClick); restartBtn.addEventListener("click", restartGame);

restartGame(); });

